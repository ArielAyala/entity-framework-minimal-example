// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using entity_framework_minimal_example;

#nullable disable

namespace entity_framework_minimal_example.Migrations
{
    [DbContext(typeof(EfMainContext))]
    [Migration("20220623010713_InitialData")]
    partial class InitialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("entity_framework_minimal_example.models.CategoryModel", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("1eac6be5-b1c3-459a-a325-058ab197a0fd"),
                            Name = "Pending activities",
                            Weight = 20
                        },
                        new
                        {
                            CategoryId = new Guid("1eac6be5-b1c3-459a-a325-058ab197a0fc"),
                            Name = "Personal activities",
                            Weight = 50
                        });
                });

            modelBuilder.Entity("entity_framework_minimal_example.models.TaskModel", b =>
                {
                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskPriority")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TaskId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Tasks", (string)null);

                    b.HasData(
                        new
                        {
                            TaskId = new Guid("508e3246-58ec-423a-b48d-30f9dcd94f9c"),
                            CategoryId = new Guid("1eac6be5-b1c3-459a-a325-058ab197a0fd"),
                            CreateDate = new DateTime(2022, 6, 22, 21, 7, 13, 178, DateTimeKind.Local).AddTicks(8298),
                            TaskPriority = 1,
                            Title = "Public services payment"
                        },
                        new
                        {
                            TaskId = new Guid("508e3246-58ec-423a-b48d-30f9dcd94f9d"),
                            CategoryId = new Guid("1eac6be5-b1c3-459a-a325-058ab197a0fc"),
                            CreateDate = new DateTime(2022, 6, 22, 21, 7, 13, 178, DateTimeKind.Local).AddTicks(8344),
                            TaskPriority = 0,
                            Title = "Check notes"
                        });
                });

            modelBuilder.Entity("entity_framework_minimal_example.models.TaskModel", b =>
                {
                    b.HasOne("entity_framework_minimal_example.models.CategoryModel", "Category")
                        .WithMany("Tasks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("entity_framework_minimal_example.models.CategoryModel", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
